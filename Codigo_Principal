#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_ZONAS 5
#define MAX_DIAS 30
#define LIMITE_CO2 50.0
#define LIMITE_SO2 20.0
#define LIMITE_NO2 25.0
#define LIMITE_PM25 10.0

typedef struct {
    char nombre[50];
    float co2[MAX_DIAS];
    float so2[MAX_DIAS];
    float no2[MAX_DIAS];
    float pm25[MAX_DIAS];
    int dias_registrados;
} Zona;

Zona zonas[MAX_ZONAS];
int total_zonas = 0;

void registrar_zona() {
    if (total_zonas >= MAX_ZONAS) {
        printf("\nNo se pueden registrar mas zonas.\n");
        return;
    }

    printf("\nIngrese el nombre de la zona: ");
    fgets(zonas[total_zonas].nombre, 50, stdin);
    zonas[total_zonas].nombre[strcspn(zonas[total_zonas].nombre, "\n")] = 0; // Eliminar salto de linea
    zonas[total_zonas].dias_registrados = 0;
    total_zonas++;
}

void registrar_datos() {
    int zona_idx;
    printf("\nSeleccione una zona (0-%d): ", total_zonas - 1);
    if (scanf("%d", &zona_idx) != 1 || zona_idx < 0 || zona_idx >= total_zonas) {
        printf("\nIndice de zona no valido.\n");
        while (getchar() != '\n'); // Limpiar buffer
        return;
    }
    Zona *zona = &zonas[zona_idx];
    if (zona->dias_registrados >= MAX_DIAS) {
        printf("\nNo se pueden registrar mas datos para esta zona.\n");
        return;
    }
    printf("\nIngrese los niveles de contaminantes para el dia %d:\n", zona->dias_registrados + 1);
    printf("CO2: ");
    if (scanf("%f", &zona->co2[zona->dias_registrados]) != 1) {
        printf("Entrada invalida.\n");
        while (getchar() != '\n'); // Limpiar buffer
        return;
    }
    printf("SO2: ");
    if (scanf("%f", &zona->so2[zona->dias_registrados]) != 1) {
        printf("Entrada invalida.\n");
        while (getchar() != '\n'); // Limpiar buffer
        return;
    }
    printf("NO2: ");
    if (scanf("%f", &zona->no2[zona->dias_registrados]) != 1) {
        printf("Entrada invalida.\n");
        while (getchar() != '\n'); // Limpiar buffer
        return;
    }
    printf("PM2.5: ");
    if (scanf("%f", &zona->pm25[zona->dias_registrados]) != 1) {
        printf("Entrada invalida.\n");
        while (getchar() != '\n'); // Limpiar buffer
        return;
    }
    zona->dias_registrados++;
}

float promedio(float datos[], int dias) {
    float suma = 0.0;
    for (int i = 0; i < dias; i++) {
        suma += datos[i];
    }
    return dias > 0 ? suma / dias : 0.0;
}

void calcular_predicciones() {
    for (int i = 0; i < total_zonas; i++) {
        Zona *zona = &zonas[i];
        printf("\nPredicciones para la zona %s:\n", zona->nombre);

        float pred_co2 = promedio(zona->co2, zona->dias_registrados);
        float pred_so2 = promedio(zona->so2, zona->dias_registrados);
        float pred_no2 = promedio(zona->no2, zona->dias_registrados);
        float pred_pm25 = promedio(zona->pm25, zona->dias_registrados);

        printf("CO2: %.2f, SO2: %.2f, NO2: %.2f, PM2.5: %.2f\n", pred_co2, pred_so2, pred_no2, pred_pm25);

        if (pred_co2 > LIMITE_CO2 || pred_so2 > LIMITE_SO2 || pred_no2 > LIMITE_NO2 || pred_pm25 > LIMITE_PM25) {
            printf("** Alerta: Se preven niveles altos de contaminacion. **\n");
        }
    }
}

void generar_reporte() {
    FILE *archivo = fopen("reporte_contaminacion.csv", "w");
    if (!archivo) {
        printf("\nError al crear el archivo de reporte.\n");
        return;
    }

    fprintf(archivo, "Zona,CO2 promedio,SO2 promedio,NO2 promedio,PM2.5 promedio\n");

    for (int i = 0; i < total_zonas; i++) {
        Zona *zona = &zonas[i];
        float prom_co2 = promedio(zona->co2, zona->dias_registrados);
        float prom_so2 = promedio(zona->so2, zona->dias_registrados);
        float prom_no2 = promedio(zona->no2, zona->dias_registrados);
        float prom_pm25 = promedio(zona->pm25, zona->dias_registrados);

        fprintf(archivo, "%s,%.2f,%.2f,%.2f,%.2f\n", zona->nombre, prom_co2, prom_so2, prom_no2, prom_pm25);
    }

    fclose(archivo);
    printf("\nReporte generado correctamente: reporte_contaminacion.csv\n");
}

void menu() {
    int opcion;
    do {
        printf("\n--- Sistema de Gestion de Contaminacion ---\n");
        printf("1. Registrar nueva zona\n");
        printf("2. Registrar datos de contaminacion\n");
        printf("3. Calcular predicciones\n");
        printf("4. Generar reporte\n");
        printf("5. Salir\n");
        printf("Seleccione una opcion: ");
        if (scanf("%d", &opcion) != 1) {
            printf("\nEntrada invalida.\n");
            while (getchar() != '\n'); // Limpiar buffer
            continue;
        }

        switch (opcion) {
            case 1:
                while (getchar() != '\n'); // Limpiar buffer
                registrar_zona();
                break;
            case 2:
                while (getchar() != '\n'); // Limpiar buffer
                registrar_datos();
                break;
            case 3:
                calcular_predicciones();
                break;
            case 4:
                generar_reporte();
                break;
            case 5:
                printf("\nSaliendo del sistema.\n");
                break;
            default:
                printf("\nOpcion no valida.\n");
        }
    } while (opcion != 5);
}

int main() {
    menu();
    return 0;
}
